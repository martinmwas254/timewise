// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A timetable generation AI agent.
 *
 * - generateTimetable - A function that handles the timetable generation process.
 * - GenerateTimetableInput - The input type for the generateTimetable function.
 * - GenerateTimetableOutput - The return type for the generateTimetable function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TutorSchema = z.object({
  name: z.string().describe('The name of the tutor.'),
  specialities: z.array(z.string()).describe('The specialities of the tutor.'),
  availability: z.string().describe('The availability of the tutor.'),
});

const GenerateTimetableInputSchema = z.object({
  tutors: z.array(TutorSchema).describe('The list of tutors with their specialities and availability.'),
  numberOfGrades: z.number().describe('The number of grades/classes to generate the timetable for.'),
});
export type GenerateTimetableInput = z.infer<typeof GenerateTimetableInputSchema>;

const GenerateTimetableOutputSchema = z.object({
  timetable: z.string().describe('The generated timetable in a readable format.'),
});
export type GenerateTimetableOutput = z.infer<typeof GenerateTimetableOutputSchema>;

export async function generateTimetable(input: GenerateTimetableInput): Promise<GenerateTimetableOutput> {
  return generateTimetableFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTimetablePrompt',
  input: {schema: GenerateTimetableInputSchema},
  output: {schema: GenerateTimetableOutputSchema},
  prompt: `You are an expert timetable generator for schools. You will receive a list of tutors, their specialities, their availability and the number of grades that need to be timetabled.

You must generate a complete timetable without any schedule conflicts, taking into account tutor availability and subject specialities. The timetable should be in a clear, readable format.

Tutors: {{#each tutors}}{{{name}}} (Specialities: {{specialities}}, Availability: {{availability}}){{#unless @last}}, {{/unless}}{{/each}}
Number of Grades: {{{numberOfGrades}}}

Timetable:
`,
});

const generateTimetableFlow = ai.defineFlow(
  {
    name: 'generateTimetableFlow',
    inputSchema: GenerateTimetableInputSchema,
    outputSchema: GenerateTimetableOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
